version: '3.9'
services:
  lancache: # Should be exact same name as "id" field in config.json
    container_name: lancache # Should be exact same name as "id" field in config.json
    image: lancachenet/monolithic@sha256:e6f66f77d959df7f416fb6f5831e816a99d28366a5fe945c11b760b17133c01e # Try to avoid "latest" tag. As it may break configs in the future.
    restart: unless-stopped # Do not change this
    environment:
      - TZ=${TZ} # Can use any env variable. See "environment variables" section in the docs
      ## See the "Settings" section in README.md for more details

      ## Set this to true if you're using a load balancer, or set it to false if you're using separate IPs for each service.
      ## If you're using monolithic (the default), leave this set to true
      USE_GENERIC_CACHE=true

      ## IP addresses that the lancache monolithic instance is reachable on
      ## Specify one or more IPs, space separated - these will be used when resolving DNS hostnames through lancachenet-dns. Multiple IPs can improve cache priming performance for some services (e.g. Steam)
      ## Note: This setting only affects DNS, monolithic and sniproxy will still bind to all IPs by default
      LANCACHE_IP=${LANCACHE_IP}

      ## IP address on the host that the DNS server should bind to
      DNS_BIND_IP=${LANCACHE_IP}

      ## DNS Resolution for forwarded DNS lookups
      UPSTREAM_DNS=${UPSTREAM_DNS}

      ## Storage path for the cached data
      ## Note that by default, this will be a folder relative to the docker-compose.yml file
      CACHE_ROOT=${APP_DATA_DIR}/data/

      ## Change this to customise the maximum size of the disk cache (default 2000g).
      ## If you have more storage, you'll likely want to increase this.
      ## The cache server will prune content on a least-recently-used basis if it
      ## starts approaching this limit.
      CACHE_DISK_SIZE=${CACHE_DISK_SIZE}

      ## Sets the minimum free disk space that must be kept at all times.
      ## When the available free space drops below the set amount for any reason,
      ## the cache server will begin pruning content to free up space.
      ## Prevents accidentally running out of disk space if CACHE_DISK_SIZE is set too high.
      MIN_FREE_DISK=${MIN_FREE_DISK}

      ## Change this to allow sufficient index memory for the nginx cache manager (default 500m)
      ## We recommend 250m of index memory per 1TB of CACHE_DISK_SIZE
      CACHE_INDEX_SIZE=${CACHE_INDEX_SIZE}

      ## Change this to limit the maximum age of cached content (default 3650d)
      CACHE_MAX_AGE=${CACHE_MAX_AGE}
    volumes:
      - ${CACHE_ROOT}/cache:/data/cache
      - ${CACHE_ROOT}/logs:/data/logs
    ports:
      - ${APP_PORT}:80/tcp
      - ${APP_PORT}:443/tcp
    networks:
      - tipi_main_network # That should not be changed
    labels: # Use your editors search and replace feature to replace all instances of "myapp" with your app name in the traefik labels
      # Main
      traefik.enable: true
      traefik.http.middlewares.lancache-web-redirect.redirectscheme.scheme: https
      traefik.http.services.lancache.loadbalancer.server.port: 80 # Should be the same as the app internal port so for this example 9443
      # Web
      traefik.http.routers.lancache-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.lancache-insecure.entrypoints: web
      traefik.http.routers.lancache-insecure.service: lancache
      traefik.http.routers.lancache-insecure.middlewares: lancache-web-redirect
      # Websecure
      traefik.http.routers.lancache.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.lancache.entrypoints: websecure
      traefik.http.routers.lancache.service: lancache
      traefik.http.routers.lancache.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.lancache-local-insecure.rule: Host(`lancache.${LOCAL_DOMAIN}`)
      traefik.http.routers.lancache-local-insecure.entrypoints: web
      traefik.http.routers.lancache-local-insecure.service: lancache
      traefik.http.routers.lancache-local-insecure.middlewares: lancache-web-redirect
      # Local domain secure
      traefik.http.routers.lancache-local.rule: Host(`lancache.${LOCAL_DOMAIN}`)
      traefik.http.routers.lancache-local.entrypoints: websecure
      traefik.http.routers.lancache-local.service: lancache
      traefik.http.routers.lancache-local.tls: true
  lancache-dns:
    container_name: lancache-dns # Should be exact same name as "id" field
    image: lancachenet/lancache-dns@sha256:3a8c96afea04434a8b951c4c0a2282c1504cf3eb72f147dc1ba9fffbe811c6d7 # Try to avoid "latest" tag. As it may break configs in the future.
    restart: unless-stopped # Do not change this
    environment:
      - TZ=${TZ} # Can use any env variable. See "environment variables" section in the docs
      ## See the "Settings" section in README.md for more details

      ## Set this to true if you're using a load balancer, or set it to false if you're using separate IPs for each service.
      ## If you're using monolithic (the default), leave this set to true
      USE_GENERIC_CACHE=true

      ## IP addresses that the lancache monolithic instance is reachable on
      ## Specify one or more IPs, space separated - these will be used when resolving DNS hostnames through lancachenet-dns. Multiple IPs can improve cache priming performance for some services (e.g. Steam)
      ## Note: This setting only affects DNS, monolithic and sniproxy will still bind to all IPs by default
      LANCACHE_IP=${LANCACHE_IP}

      ## IP address on the host that the DNS server should bind to
      DNS_BIND_IP=${LANCACHE_IP}

      ## DNS Resolution for forwarded DNS lookups
      UPSTREAM_DNS=${UPSTREAM_DNS}

      ## Storage path for the cached data
      ## Note that by default, this will be a folder relative to the docker-compose.yml file
      CACHE_ROOT=${APP_DATA_DIR}/data/

      ## Change this to customise the maximum size of the disk cache (default 2000g).
      ## If you have more storage, you'll likely want to increase this.
      ## The cache server will prune content on a least-recently-used basis if it
      ## starts approaching this limit.
      CACHE_DISK_SIZE=${CACHE_DISK_SIZE}

      ## Sets the minimum free disk space that must be kept at all times.
      ## When the available free space drops below the set amount for any reason,
      ## the cache server will begin pruning content to free up space.
      ## Prevents accidentally running out of disk space if CACHE_DISK_SIZE is set too high.
      MIN_FREE_DISK=${MIN_FREE_DISK}

      ## Change this to allow sufficient index memory for the nginx cache manager (default 500m)
      ## We recommend 250m of index memory per 1TB of CACHE_DISK_SIZE
      CACHE_INDEX_SIZE=${CACHE_INDEX_SIZE}

      ## Change this to limit the maximum age of cached content (default 3650d)
      CACHE_MAX_AGE=${CACHE_MAX_AGE}
    ports:
      - ${APP_PORT}:53/udp
      - ${APP_PORT}:53/tcp
    networks:
      - tipi_main_network # That should not be changed
    labels:
      # Main
      traefik.enable: false
